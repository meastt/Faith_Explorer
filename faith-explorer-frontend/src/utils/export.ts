import type { SavedVerse } from '../types';
import { RELIGIONS } from '../types';

export function exportToMarkdown(verses: SavedVerse[]): string {
  const date = new Date().toLocaleDateString();

  let markdown = `# Faith Explorer Collection\n\n`;
  markdown += `*Exported on ${date}*\n\n`;
  markdown += `---\n\n`;

  // Group by religion
  const byReligion = verses.reduce((acc, verse) => {
    const religion = verse.religion || 'unknown';
    if (!acc[religion]) acc[religion] = [];
    acc[religion].push(verse);
    return acc;
  }, {} as Record<string, SavedVerse[]>);

  Object.entries(byReligion).forEach(([religionId, religionVerses]) => {
    const religionInfo = RELIGIONS.find(r => r.id === religionId);

    markdown += `## ${religionInfo?.name || religionId}\n\n`;

    religionVerses.forEach(verse => {
      markdown += `### ${verse.reference}\n\n`;
      markdown += `> "${verse.text}"\n\n`;

      if (verse.notes) {
        markdown += `**Notes:** ${verse.notes}\n\n`;
      }

      if (verse.tags && verse.tags.length > 0) {
        markdown += `**Tags:** ${verse.tags.join(', ')}\n\n`;
      }

      markdown += `---\n\n`;
    });
  });

  markdown += `\n*Generated by Faith Explorer - Bridging understanding across faiths*\n`;

  return markdown;
}

export function exportToCitations(verses: SavedVerse[], format: 'mla' | 'apa' | 'chicago' = 'mla'): string {
  let citations = `# Citations - ${format.toUpperCase()} Format\n\n`;

  verses.forEach((verse, index) => {
    const religionInfo = RELIGIONS.find(r => r.id === verse.religion);
    const text = religionInfo?.text || 'Unknown';

    if (format === 'mla') {
      citations += `${index + 1}. *${text}*. ${verse.reference}.\n\n`;
    } else if (format === 'apa') {
      citations += `${index + 1}. ${text}. ${verse.reference}.\n\n`;
    } else if (format === 'chicago') {
      citations += `${index + 1}. *${text}*, ${verse.reference}.\n\n`;
    }
  });

  return citations;
}

export function downloadAsFile(content: string, filename: string, type: 'text/markdown' | 'text/plain' = 'text/markdown') {
  const blob = new Blob([content], { type });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}

export function exportCollection(verses: SavedVerse[], format: 'markdown' | 'mla' | 'apa' | 'chicago') {
  const date = new Date().toISOString().split('T')[0];

  if (format === 'markdown') {
    const content = exportToMarkdown(verses);
    downloadAsFile(content, `faith-explorer-collection-${date}.md`, 'text/markdown');
  } else {
    const content = exportToCitations(verses, format);
    downloadAsFile(content, `faith-explorer-citations-${format}-${date}.txt`, 'text/plain');
  }
}
